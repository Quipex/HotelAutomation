name: CI
on:
  pull_request:
    paths:
      - HotelCommon/**/*
      - HotelPmsAdapter/**/*
      - HotelTelebot/**/*
      - .github/workflows/continuous-integration.yml
      - package.json
      - yarn.lock

jobs:
  testing:
    name: Testing & Linting
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: hotel_integration_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read constants from file
        uses: cardinalby/export-env-action@v1
        with:
          envFile: '.github/workflows/constants.env'

      - name: Setting up NodeJS v${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing Dependencies
        run: |
          npm i -g yarn
          yarn run install:all
          yarn run setupenv
          yarn run createdirs

      - name: Linting Common
        run: yarn run lint:common

      - name: Linting PmsAdapter
        run: yarn run lint:server

      - name: Linting Telebot
        run: yarn run lint:tg

      - name: Testing Common
        run: yarn run test:common

      - name: Testing PmsAdapter
        run: yarn run test:server

      - name: Testing Telebot
        run: yarn run test:tg
